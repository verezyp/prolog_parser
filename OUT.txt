GET TOKEN COMMENT (% For the Prolog portion of CISC352, Fall 2003.)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% This is exshell.pl, an expert-system shell, written in Prolog.  It is a)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% slight modification of the code at)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% http://www.cs.appstate.edu/~blk/cs4440/java/rule-prolog/exshell)
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (%The diagnosis is initiated by the goal 'solve'.)
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (solve)
GET COLON
Rule: component -> COMPONENT_NAME//
GET MINUS
GET TOKEN COMPONENT_NAME (solve)
GET OPBR
GET TOKEN COMPONENT_NAME (fix)
GET OPBR
GET TOKEN VAR_NAME (X)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: bracket_term -> COMPONENT_NAME ( listterms )
Rule: term -> bracket_term
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN COMPONENT_NAME (nl)
GET TOKEN DOT
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (solve)
GET COLON
Rule: component -> COMPONENT_NAME//
GET MINUS
GET TOKEN COMPONENT_NAME (retractall)
GET OPBR
GET TOKEN COMPONENT_NAME (know)
GET OPBR
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: bracket_term -> COMPONENT_NAME ( listterms )
Rule: term -> bracket_term
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('There is insufficient knowledge to make a diagnosis')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (nl)
GET TOKEN DOT
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% The notation "solve/2" means "solve with 2 arguments".)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% solve/2 succeeds with)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 1 bound to a goal proven true using the current knowledge base)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 2 bound to the confidence in that goal.)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% solve/2 calls solve/4 with appropriate arguments.  After solve/4 has completed, )
GET TOKEN ENDLINE
GET TOKEN COMMENT (% it writes the conclusions and prints a trace.)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (solve)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (retractall)
GET OPBR
GET TOKEN COMPONENT_NAME (known)
GET OPBR
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: bracket_term -> COMPONENT_NAME ( listterms )
Rule: term -> bracket_term
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (print_instructions)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (solve)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN SQOPBR ([)
GET TOKEN SQCLBR (])
Rule: bracket_term -> [] ( listterms )
Rule: term -> bracket_term
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN NUMBER (20)
Rule: term -> NUMBER
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMMENT (% use 20 as the threshold for pruning rules)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING (' was concluded with certainty ')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (build_proof)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Proof)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('The proof is ')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_proof)
GET OPBR
GET TOKEN VAR_NAME (Proof)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN NUMBER (0)
Rule: term -> NUMBER
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET TOKEN DOT
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (%solve/4 succeeds with)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 1 bound to a goal proven true using the current knowledge base)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 2 bound to the confidence in that goal.)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 3 bound to the current rule stack)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 4 bound to the threshold for pruning rules.)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%solve/4 is the heart of exshell.  In this version, I have gone back to the)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% simpler version.  It still has problems with negation, but I think that)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% this is more a result of problems with the semantics of Stanford Certainty)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% factors than a bug in the program.)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% The pruning threshold will vary between 20 and -20, depending whether,)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% we are trying to prove the current goal true or false.)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% solve/4 handles conjunctive predicates, rules, user queries and negation.)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% If a predicate cannot be solved using rules, it will call it as a PROLOG predicate.)
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% Case 1: truth value of goal is already known)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (solve)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Threshold)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (known)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN STRING (!)
Rule: term -> CUT
Rule: list_components -> list_components , component
GET COMMA
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (above_threshold)
GET OPBR
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Threshold)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% Case 2: negated goal	)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (solve)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Threshold)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN STRING (!)
Rule: term -> CUT
Rule: list_components -> component
GET COMMA
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (invert_threshold)
GET OPBR
GET TOKEN VAR_NAME (Threshold)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (New_threshold)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (solve)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF_goal)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (New_threshold)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (negate_cf)
GET OPBR
GET TOKEN VAR_NAME (CF_goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% Case 3: conjunctive goals	)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (solve)
GET OPBR
GET OPBR
GET TOKEN VAR_NAME (Goal_1)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Goal_2)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: listterms -> OPBR listterms CLBR
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Threshold)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN STRING (!)
Rule: term -> CUT
Rule: list_components -> component
GET COMMA
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (solve)
GET OPBR
GET TOKEN VAR_NAME (Goal_1)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF_1)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Threshold)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (above_threshold)
GET OPBR
GET TOKEN VAR_NAME (CF_1)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Threshold)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (solve)
GET OPBR
GET TOKEN VAR_NAME (Goal_2)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF_2)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Threshold)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (above_threshold)
GET OPBR
GET TOKEN VAR_NAME (CF_2)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Threshold)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (and_cf)
GET OPBR
GET TOKEN VAR_NAME (CF_1)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF_2)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (%Case 4: backchain on a rule in knowledge base	)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (solve)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Threshold)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (rule)
GET OPBR
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COLON
GET MINUS
GET OPBR
GET TOKEN VAR_NAME (Premise)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET CLBR
Rule: listterms -> OPBR listterms CLBR
Rule: term -> bracket_term
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF_rule)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (solve)
GET OPBR
GET TOKEN VAR_NAME (Premise)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF_premise)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN ENDLINE
GET TOKEN SQOPBR ([)
GET TOKEN COMPONENT_NAME (rule)
GET OPBR
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COLON
GET MINUS
GET TOKEN VAR_NAME (Premise)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: term -> bracket_term
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF_rule)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: bracket_term -> COMPONENT_NAME ( listterms )
Rule: term -> bracket_term
Rule: listterms -> term
GET TOKEN VERTICAL_PIPE (|)
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms | term
GET TOKEN SQCLBR (])
Rule: bracket_term -> [] ( listterms )
Rule: term -> bracket_term
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Threshold)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (rule_cf)
GET OPBR
GET TOKEN VAR_NAME (CF_rule)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF_premise)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (above_threshold)
GET OPBR
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Threshold)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (%Case 5: fact assertion in knowledge base)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (solve)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Threshold)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (rule)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (above_threshold)
GET OPBR
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Threshold)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% Case 6: ask user)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (solve)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Threshold)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (askable)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (askuser)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN STRING (!)
Rule: term -> CUT
Rule: list_components -> list_components , component
GET COMMA
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (assert)
GET OPBR
GET TOKEN COMPONENT_NAME (known)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: bracket_term -> COMPONENT_NAME ( listterms )
Rule: term -> bracket_term
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (above_threshold)
GET OPBR
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Threshold)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% Case 7A: All else fails, see if goal can be solved in prolog.)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% solve(Goal, 100, _, _) :-)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	call(Goal).)
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% Certainty factor predicates.  Currently, these implement a variation of )
GET TOKEN ENDLINE
GET TOKEN COMMENT (% the MYCIN certainty factor algebra.)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% The certainty algebra may be changed by modifying these predicates.)
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% negate_cf/2)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 1 is a certainty factor)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 2 is the negation of that certainty factor)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (negate_cf)
GET OPBR
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Negated_CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN VAR_NAME (Negated_CF)
Rule: term -> VAR_NAME
GET TOKEN OPERATOR (is)
GET MINUS
GET TOKEN NUMBER (1)
Rule: term -> NUMBER
Rule: term -> MINUS term
Rule: subterm OPERATOR term
GET TOKEN OPERATOR (*)
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: subterm OPERATOR term
GET TOKEN DOT
Rule: component -> list_components subterm
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% and_cf/3)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	arguments 1 & 2 are certainty factors of conjoined predicates)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 3 is the certainty factor of the conjunction)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (and_cf)
GET OPBR
GET TOKEN VAR_NAME (A)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (B)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (A)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN VAR_NAME (A)
Rule: term -> VAR_NAME
GET TOKEN OPERATOR (=<)
GET TOKEN VAR_NAME (B)
Rule: term -> VAR_NAME
Rule: subterm OPERATOR term
GET TOKEN DOT
Rule: component -> list_components subterm
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (and_cf)
GET OPBR
GET TOKEN VAR_NAME (A)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (B)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (B)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN VAR_NAME (B)
Rule: term -> VAR_NAME
GET TOKEN OPERATOR (<)
GET TOKEN VAR_NAME (A)
Rule: term -> VAR_NAME
Rule: subterm OPERATOR term
GET TOKEN DOT
Rule: component -> list_components subterm
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (%rule_cf/3)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 1 is the confidence factor given with a rule)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 2 is the confidence inferred for the premise)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 3 is the confidence inferred for the conclusion)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (rule_cf)
GET OPBR
GET TOKEN VAR_NAME (CF_rule)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF_premise)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
GET TOKEN OPERATOR (is)
GET TOKEN VAR_NAME (CF_rule)
Rule: term -> VAR_NAME
Rule: subterm OPERATOR term
GET TOKEN OPERATOR (*)
GET TOKEN VAR_NAME (CF_premise)
Rule: term -> VAR_NAME
Rule: subterm OPERATOR term
GET TOKEN OPERATOR (/)
GET TOKEN NUMBER (100)
Rule: term -> NUMBER
Rule: subterm OPERATOR term
GET TOKEN DOT
Rule: component -> list_components subterm
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (%above_threshold/2)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 1 is a certainty factor)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 2 is a threshold for pruning)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% If the threshold, T, is positive, assume we are trying to prove the goal)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% true.  Succeed if CF >= T.)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% If T is negative, assume we are trying to prove the goal)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% false.  Succeed if CF <= T.)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (above_threshold)
GET OPBR
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (T)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN VAR_NAME (T)
Rule: term -> VAR_NAME
GET TOKEN OPERATOR (>=)
GET TOKEN NUMBER (0)
Rule: term -> NUMBER
Rule: subterm OPERATOR term
GET COMMA
Rule: component -> list_components subterm
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
GET TOKEN OPERATOR (>=)
GET TOKEN VAR_NAME (T)
Rule: term -> VAR_NAME
Rule: subterm OPERATOR term
GET TOKEN DOT
Rule: list_components COMMA    subterm
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (above_threshold)
GET OPBR
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (T)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN VAR_NAME (T)
Rule: term -> VAR_NAME
GET TOKEN OPERATOR (<)
GET TOKEN NUMBER (0)
Rule: term -> NUMBER
Rule: subterm OPERATOR term
GET COMMA
Rule: component -> list_components subterm
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
GET TOKEN OPERATOR (=<)
GET TOKEN VAR_NAME (T)
Rule: term -> VAR_NAME
Rule: subterm OPERATOR term
GET TOKEN DOT
Rule: list_components COMMA    subterm
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (%invert_threshold/2)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 1 is a threshold)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% 	argument 2 is that threshold inverted to account for a negated goal.)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% If we are trying to prove not(p), then we want to prove p false.)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% Consequently, we should prune proofs of p if they cannot prove it)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% false.  This is the role of threshold inversion.)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (invert_threshold)
GET OPBR
GET TOKEN VAR_NAME (Threshold)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (New_threshold)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN VAR_NAME (New_threshold)
Rule: term -> VAR_NAME
GET TOKEN OPERATOR (is)
GET MINUS
GET TOKEN NUMBER (1)
Rule: term -> NUMBER
Rule: term -> MINUS term
Rule: subterm OPERATOR term
GET TOKEN OPERATOR (*)
GET TOKEN VAR_NAME (Threshold)
Rule: term -> VAR_NAME
Rule: subterm OPERATOR term
GET TOKEN DOT
Rule: component -> list_components subterm
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% Predicates to handle user interactions.  As is typical, these )
GET TOKEN ENDLINE
GET TOKEN COMMENT (% constitute the greatest bulk of the program.)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% askuser/3)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 1 is a goal whose truth is to be asked of the user.)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 2 is the confidence the user has in that goal)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 3 is the current rule stack (used for why queries).)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% )
GET TOKEN ENDLINE
GET TOKEN COMMENT (% askuser prints the query, followed by a set of instructions.)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% it reads the response and calls respond/4 to handle that response)
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (askuser)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('Is it true that ')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('? ')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (read)
GET OPBR
GET TOKEN VAR_NAME (Answer)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (respond)
GET OPBR
GET TOKEN VAR_NAME (Answer)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (%respond/4)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 1 is the user response)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% 	argument 2 is the goal presented to the user)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 3 is the CF obtained for that goal)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 4 is the current rule stack (used for why queries).)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% The basic scheme of respond/4 is to examine the response and return)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% the certainty for the goal if possible.)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% If the response is a why query, how query, etc., it processes the query)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% and then calls askuser to re prompt the user.)
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% Case 1: user enters a valid confidence factor.)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (respond)
GET OPBR
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (number)
GET OPBR
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN ENDLINE
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
GET TOKEN OPERATOR (=<)
GET TOKEN NUMBER (100)
Rule: term -> NUMBER
Rule: subterm OPERATOR term
GET COMMA
Rule: list_components COMMA    subterm
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
GET TOKEN OPERATOR (>=)
GET MINUS
GET TOKEN NUMBER (100)
Rule: term -> NUMBER
Rule: term -> MINUS term
Rule: subterm OPERATOR term
GET TOKEN DOT
Rule: list_components COMMA    subterm
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% Case 2: user enters 'n' for no.  Return a confidence factor of -1.0	)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (respond)
GET OPBR
GET TOKEN COMPONENT_NAME (n)
GET COMMA
Rule: term -> COMPONENT_NAME
Rule: listterms -> term
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET MINUS
GET TOKEN NUMBER (100)
Rule: term -> NUMBER
Rule: term -> MINUS term
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET TOKEN DOT
Rule: expr -> component DOT
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% Case 3: user enters 'y' for yes.  Return a confidence factor of 1.0	)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (respond)
GET OPBR
GET TOKEN COMPONENT_NAME (y)
GET COMMA
Rule: term -> COMPONENT_NAME
Rule: listterms -> term
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN NUMBER (100)
Rule: term -> NUMBER
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET TOKEN DOT
Rule: expr -> component DOT
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% Case 4: user enters a pattern that matches the goal.  This is useful if)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% the goal has variables that need to be bound.  )
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (respond)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('Enter confidence in answer')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('?')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (read)
GET OPBR
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% Case 5: user enters a why query)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (respond)
GET OPBR
GET TOKEN COMPONENT_NAME (why)
GET COMMA
Rule: term -> COMPONENT_NAME
Rule: listterms -> term
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN SQOPBR ([)
GET TOKEN VAR_NAME (Rule)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET TOKEN VERTICAL_PIPE (|)
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms | term
GET TOKEN SQCLBR (])
Rule: bracket_term -> [] ( listterms )
Rule: term -> bracket_term
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_rule)
GET OPBR
GET TOKEN VAR_NAME (Rule)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (askuser)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (respond)
GET OPBR
GET TOKEN COMPONENT_NAME (why)
GET COMMA
Rule: term -> COMPONENT_NAME
Rule: listterms -> term
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN SQOPBR ([)
GET TOKEN SQCLBR (])
Rule: bracket_term -> [] ( listterms )
Rule: term -> bracket_term
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('Back to top of rule stack.')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (askuser)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN SQOPBR ([)
GET TOKEN SQCLBR (])
Rule: bracket_term -> [] ( listterms )
Rule: term -> bracket_term
Rule: listterms -> listterms , term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% Case 6: User enters a how query.  Build and print a proof)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (respond)
GET OPBR
GET TOKEN COMPONENT_NAME (how)
GET OPBR
GET TOKEN VAR_NAME (X)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: bracket_term -> COMPONENT_NAME ( listterms )
Rule: term -> bracket_term
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (build_proof)
GET OPBR
GET TOKEN VAR_NAME (X)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF_X)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Proof)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN STRING (!)
Rule: term -> CUT
Rule: list_components -> list_components , component
GET COMMA
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (X)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING (' was concluded with certainty ')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (CF_X)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('The proof is ')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_proof)
GET OPBR
GET TOKEN VAR_NAME (Proof)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN NUMBER (0)
Rule: term -> NUMBER
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (askuser)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% User enters how query, could not build proof)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (respond)
GET OPBR
GET TOKEN COMPONENT_NAME (how)
GET OPBR
GET TOKEN VAR_NAME (X)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: bracket_term -> COMPONENT_NAME ( listterms )
Rule: term -> bracket_term
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('The truth of ')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (X)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('is not yet known.')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (askuser)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% Case 7: User asks for the rules that conclude a certain predicate	)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (respond)
GET OPBR
GET TOKEN COMPONENT_NAME (rule)
GET OPBR
GET TOKEN VAR_NAME (X)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: bracket_term -> COMPONENT_NAME ( listterms )
Rule: term -> bracket_term
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('The following rules conclude about ')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (X)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (rule)
GET OPBR
GET OPBR
GET TOKEN VAR_NAME (X)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COLON
GET MINUS
GET TOKEN VAR_NAME (Premise)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: term -> bracket_term
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN COMPONENT_NAME (rule)
GET OPBR
GET OPBR
GET TOKEN VAR_NAME (X)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COLON
GET MINUS
GET TOKEN VAR_NAME (Premise)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: term -> bracket_term
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: bracket_term -> COMPONENT_NAME ( listterms )
Rule: term -> bracket_term
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (fail)
GET TOKEN DOT
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (respond)
GET OPBR
GET TOKEN COMPONENT_NAME (rule)
GET OPBR
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: bracket_term -> COMPONENT_NAME ( listterms )
Rule: term -> bracket_term
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (askuser)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% Case 8: User asks for help.)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (respond)
GET OPBR
GET TOKEN COMPONENT_NAME (help)
GET COMMA
Rule: term -> COMPONENT_NAME
Rule: listterms -> term
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (print_instructions)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (askuser)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (%Case 9: User wants to stop running the program.)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (respond)
GET OPBR
GET TOKEN COMPONENT_NAME (halt)
GET COMMA
Rule: term -> COMPONENT_NAME
Rule: listterms -> term
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING (' Thanks for using the automobile diagnosis
system.')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (abort)
GET TOKEN DOT
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (%Case 10: Unrecognized input)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (respond)
GET OPBR
GET TOKEN VAR_NAME (_)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('Unrecognized response.')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (askuser)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Rules)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (%build_proof/3)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 1 is the goal being traced.)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 2 is the CF of that goal)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 3 is the proof tree)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% build_proof does not do threshold pruning, so it can show)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% the proof for even goals that would not succeed.)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (build_proof)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET OPBR
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COLON
Rule: listterms -> OPBR listterms CLBR
GET MINUS
GET TOKEN COMPONENT_NAME (given)
GET CLBR
Rule: term -> COMPONENT_NAME
Rule: listterms -> term
Rule: term -> bracket_term
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (known)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN STRING (!)
Rule: term -> CUT
Rule: list_components -> list_components , component
GET TOKEN DOT
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (build_proof)
GET OPBR
GET TOKEN COMPONENT_NAME (not)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: bracket_term -> COMPONENT_NAME ( listterms )
Rule: term -> bracket_term
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN COMPONENT_NAME (not)
GET OPBR
GET TOKEN VAR_NAME (Proof)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: bracket_term -> COMPONENT_NAME ( listterms )
Rule: term -> bracket_term
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN STRING (!)
Rule: term -> CUT
Rule: list_components -> component
GET COMMA
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (build_proof)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF_goal)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Proof)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (negate_cf)
GET OPBR
GET TOKEN VAR_NAME (CF_goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (build_proof)
GET OPBR
GET OPBR
GET TOKEN VAR_NAME (Goal_1)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Goal_2)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: listterms -> OPBR listterms CLBR
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET OPBR
GET TOKEN VAR_NAME (Proof_1)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Proof_2)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: term -> OPBR listterms CLBR
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN STRING (!)
Rule: term -> CUT
Rule: list_components -> component
GET COMMA
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (build_proof)
GET OPBR
GET TOKEN VAR_NAME (Goal_1)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF_1)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Proof_1)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (build_proof)
GET OPBR
GET TOKEN VAR_NAME (Goal_2)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF_2)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Proof_2)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (and_cf)
GET OPBR
GET TOKEN VAR_NAME (CF_1)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF_2)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (build_proof)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET OPBR
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COLON
Rule: listterms -> OPBR listterms CLBR
GET MINUS
GET TOKEN VAR_NAME (Proof)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: term -> bracket_term
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (rule)
GET OPBR
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COLON
GET MINUS
GET OPBR
GET TOKEN VAR_NAME (Premise)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET CLBR
Rule: listterms -> OPBR listterms CLBR
Rule: term -> bracket_term
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF_rule)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (build_proof)
GET OPBR
GET TOKEN VAR_NAME (Premise)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF_premise)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (Proof)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (rule_cf)
GET OPBR
GET TOKEN VAR_NAME (CF_rule)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF_premise)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (build_proof)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET COMMA
GET OPBR
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COLON
Rule: listterms -> OPBR listterms CLBR
GET MINUS
GET TOKEN COMPONENT_NAME (fact)
GET CLBR
Rule: term -> COMPONENT_NAME
Rule: listterms -> term
Rule: term -> bracket_term
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (rule)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% build_proof(Goal, 1, ((Goal, 1):- call)) :-)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	call(Goal).)
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% write_proof/2)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 1 is a portion of a proof tree)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 2 is the depth of that portion (for indentation))
GET TOKEN ENDLINE
GET TOKEN COMMENT (%)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% writes out a proof tree in a readable format)
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_proof)
GET OPBR
GET OPBR
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COLON
Rule: listterms -> OPBR listterms CLBR
GET MINUS
GET TOKEN COMPONENT_NAME (given)
GET CLBR
Rule: term -> COMPONENT_NAME
Rule: listterms -> term
Rule: term -> bracket_term
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Level)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (indent)
GET OPBR
GET TOKEN VAR_NAME (Level)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING (' CF= ')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING (' was given by the user')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN STRING (!)
Rule: term -> CUT
Rule: list_components -> list_components , component
GET TOKEN DOT
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_proof)
GET OPBR
GET OPBR
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COLON
Rule: listterms -> OPBR listterms CLBR
GET MINUS
GET TOKEN COMPONENT_NAME (fact)
GET CLBR
Rule: term -> COMPONENT_NAME
Rule: listterms -> term
Rule: term -> bracket_term
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Level)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (indent)
GET OPBR
GET TOKEN VAR_NAME (Level)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING (' CF= ')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING (' was a fact in the knowledge base')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN STRING (!)
Rule: term -> CUT
Rule: list_components -> list_components , component
GET TOKEN DOT
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_proof)
GET OPBR
GET OPBR
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COLON
Rule: listterms -> OPBR listterms CLBR
GET MINUS
GET TOKEN COMPONENT_NAME (call)
GET CLBR
Rule: term -> COMPONENT_NAME
Rule: listterms -> term
Rule: term -> bracket_term
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Level)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (indent)
GET OPBR
GET TOKEN VAR_NAME (Level)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING (' CF= ')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING (' was proven by a call to prolog')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN STRING (!)
Rule: term -> CUT
Rule: list_components -> list_components , component
GET TOKEN DOT
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_proof)
GET OPBR
GET OPBR
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COLON
Rule: listterms -> OPBR listterms CLBR
GET MINUS
GET TOKEN VAR_NAME (Proof)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: term -> bracket_term
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Level)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (indent)
GET OPBR
GET TOKEN VAR_NAME (Level)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING (' CF= ')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING (' :-')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN VAR_NAME (New_level)
Rule: term -> VAR_NAME
GET TOKEN OPERATOR (is)
GET TOKEN VAR_NAME (Level)
Rule: term -> VAR_NAME
Rule: subterm OPERATOR term
GET TOKEN OPERATOR (+)
GET TOKEN NUMBER (1)
Rule: term -> NUMBER
Rule: subterm OPERATOR term
GET COMMA
Rule: list_components COMMA    subterm
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_proof)
GET OPBR
GET TOKEN VAR_NAME (Proof)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (New_level)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN STRING (!)
Rule: term -> CUT
Rule: list_components -> list_components , component
GET TOKEN DOT
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_proof)
GET OPBR
GET TOKEN COMPONENT_NAME (not)
GET OPBR
GET TOKEN VAR_NAME (Proof)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: bracket_term -> COMPONENT_NAME ( listterms )
Rule: term -> bracket_term
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Level)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (indent)
GET OPBR
GET TOKEN VAR_NAME (Level)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('not')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN VAR_NAME (New_level)
Rule: term -> VAR_NAME
GET TOKEN OPERATOR (is)
GET TOKEN VAR_NAME (Level)
Rule: term -> VAR_NAME
Rule: subterm OPERATOR term
GET TOKEN OPERATOR (+)
GET TOKEN NUMBER (1)
Rule: term -> NUMBER
Rule: subterm OPERATOR term
GET COMMA
Rule: list_components COMMA    subterm
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_proof)
GET OPBR
GET TOKEN VAR_NAME (Proof)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (New_level)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN STRING (!)
Rule: term -> CUT
Rule: list_components -> list_components , component
GET TOKEN DOT
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_proof)
GET OPBR
GET OPBR
GET TOKEN VAR_NAME (Proof_1)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Proof_2)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: listterms -> OPBR listterms CLBR
GET TOKEN VAR_NAME (Level)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_proof)
GET OPBR
GET TOKEN VAR_NAME (Proof_1)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Level)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_proof)
GET OPBR
GET TOKEN VAR_NAME (Proof_2)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Level)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN STRING (!)
Rule: term -> CUT
Rule: list_components -> list_components , component
GET TOKEN DOT
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% indent/1)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 1 is the number of units to indent)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (indent)
GET OPBR
GET TOKEN NUMBER (0)
Rule: term -> NUMBER
Rule: listterms -> term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET TOKEN DOT
Rule: expr -> component DOT
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (indent)
GET OPBR
GET TOKEN VAR_NAME (I)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('     ')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN ENDLINE
GET TOKEN VAR_NAME (I_new)
Rule: term -> VAR_NAME
GET TOKEN OPERATOR (is)
GET TOKEN VAR_NAME (I)
Rule: term -> VAR_NAME
Rule: subterm OPERATOR term
GET MINUS
GET TOKEN NUMBER (1)
Rule: term -> NUMBER
Rule: subterm MINUS term
GET COMMA
Rule: list_components COMMA    subterm
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (indent)
GET OPBR
GET TOKEN VAR_NAME (I_new)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (%print_instructions/0)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% Prints all options for user responses)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (print_instructions)
GET COLON
Rule: component -> COMPONENT_NAME//
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('Hello.  Please answer my questions with \
		one of the following:')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('    "y.", which means "yes" (confidence value 100).')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('    "n.", which means "no"  (confidence value -100).')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('    A number followed by a period.  The number, which should be')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('    between -100 and 100, is your confidence in the truth of the query.')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('    "why." to get an explanation of why I ask this question.')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('    "how(X)." to find out how confident I am in concluding X,')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('             and how I reached that conclusion.')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('    "rule(X)." to display all rules that conclude about X.')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('    "halt." to terminate consultation.')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('    "help." to print this message.')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET TOKEN DOT
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% write_rule/1)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 1 is a rule specification)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% writes out the rule in a readable format)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_rule)
GET OPBR
GET TOKEN COMPONENT_NAME (rule)
GET OPBR
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COLON
GET MINUS
GET OPBR
GET TOKEN VAR_NAME (Premise)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET CLBR
Rule: listterms -> OPBR listterms CLBR
Rule: term -> bracket_term
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: bracket_term -> COMPONENT_NAME ( listterms )
Rule: term -> bracket_term
Rule: listterms -> term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('if')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_premise)
GET OPBR
GET TOKEN VAR_NAME (Premise)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('CF = ')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET TOKEN DOT
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_rule)
GET OPBR
GET TOKEN COMPONENT_NAME (rule)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
Rule: bracket_term -> COMPONENT_NAME ( listterms )
Rule: term -> bracket_term
Rule: listterms -> term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (Goal)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN COMPONENT_NAME (nl)
GET COMMA
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('CF = ')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (CF)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET TOKEN DOT
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% write_premise)
GET TOKEN ENDLINE
GET TOKEN COMMENT (%	argument 1 is a rule premise)
GET TOKEN ENDLINE
GET TOKEN COMMENT (% writes it in a readable format.)
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_premise)
GET OPBR
GET OPBR
GET TOKEN VAR_NAME (Premise_1)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COMMA
GET TOKEN VAR_NAME (Premise_2)
Rule: term -> VAR_NAME
Rule: listterms -> listterms , term
GET CLBR
GET CLBR
Rule: listterms -> OPBR listterms CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN STRING (!)
Rule: term -> CUT
Rule: list_components -> component
GET COMMA
GET TOKEN COMPONENT_NAME (write_premise)
GET OPBR
GET TOKEN VAR_NAME (Premise_1)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_premise)
GET OPBR
GET TOKEN VAR_NAME (Premise_2)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET TOKEN DOT
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_premise)
GET OPBR
GET TOKEN COMPONENT_NAME (not)
GET OPBR
GET TOKEN VAR_NAME (Premise)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: bracket_term -> COMPONENT_NAME ( listterms )
Rule: term -> bracket_term
Rule: listterms -> term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN STRING (!)
Rule: term -> CUT
Rule: list_components -> component
GET COMMA
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('     ')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN COMPONENT_NAME (not)
GET CLBR
Rule: term -> COMPONENT_NAME
Rule: listterms -> term
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING (' ')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (Premise)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET TOKEN DOT
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write_premise)
GET OPBR
GET TOKEN VAR_NAME (Premise)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN STRING ('     ')
Rule: term -> STRING
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN COMPONENT_NAME (write)
GET OPBR
GET TOKEN VAR_NAME (Premise)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> list_components , component
GET TOKEN COMPONENT_NAME (nl)
GET TOKEN DOT
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMMENT (% Utility Predicates.)
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (retractall)
GET OPBR
GET TOKEN VAR_NAME (X)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN COMPONENT_NAME (retract)
GET OPBR
GET TOKEN VAR_NAME (X)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN COMPONENT_NAME (fail)
GET TOKEN DOT
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (retractall)
GET OPBR
GET TOKEN VAR_NAME (X)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET COLON
GET MINUS
GET TOKEN COMPONENT_NAME (retract)
GET OPBR
GET OPBR
GET TOKEN VAR_NAME (X)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET COLON
GET MINUS
GET TOKEN VAR_NAME (Y)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: term -> bracket_term
Rule: listterms -> term
GET CLBR
GET COMMA
Rule: component -> COMPONENT_NAME ( listterms )
Rule: list_components -> component
GET TOKEN COMPONENT_NAME (fail)
GET TOKEN DOT
Rule: component -> COMPONENT_NAME//
Rule: list_components -> list_components , component
Rule: expr -> component COLON MINUS list_components DOT 
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN COMPONENT_NAME (retractall)
GET OPBR
GET TOKEN VAR_NAME (X)
Rule: term -> VAR_NAME
Rule: listterms -> term
GET CLBR
Rule: component -> COMPONENT_NAME ( listterms )
GET TOKEN DOT
Rule: expr -> component DOT
Rule: intergral_expr -> expr
Rule: base_block -> intergral_expr ENDLINE
Rule: program -> program base_block
GET TOKEN ENDLINE
GET TOKEN ENDLINE
GET TOKEN ENDLINE

VALID!
